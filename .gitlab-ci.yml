image: maven:3-jdk-8

cache:
 paths:
 - /root/.m2/repository

stages:
 - build
 - deploy

before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SSH_PRIVATE_KEY")
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && ssh-keyscan -H "$SSH_HOSTNAME" > ~/.ssh/known_hosts'
  - scp root@$SSH_HOSTNAME:~/bni-ecollection-1.0.0.jar /tmp/

build:
 stage: build
 services:
 - postgres:latest
 variables:
   POSTGRES_DB : "paymentva"
   POSTGRES_USER: "tazkiava"
   POSTGRES_PASSWORD: "HBQD1KLFmjfD3GjeMkLS"
   SPRING_DATASOURCE_URL: jdbc:postgresql://postgres/paymentva
 script:
 - mvn deploy:deploy-file -Durl=file://$(pwd)/.mvn/repository -DgroupId=id.co.bni.ecollection -DartifactId=bni-ecollection -Dversion=1.0.0 -Dpackaging=jar -Dfile=/tmp/bni-ecollection-1.0.0.jar
 - mvn clean package
 artifacts:
     paths:
       - target/*.jar

deploy-dev:
 stage: deploy
 image: ubuntu:latest
 variables:
   HEROKU_API_KEY: $HEROKU_API_KEY
 script:
   - apt install wget openjdk-8-jdk-headless -y
   - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
   - heroku plugins:install heroku-cli-deploy
   - heroku deploy:jar target/*.jar --app $HEROKU_APP_NAME